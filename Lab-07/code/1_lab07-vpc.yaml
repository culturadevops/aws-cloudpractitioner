AWSTemplateFormatVersion: '2010-09-09'
Description: '1_lab07-vpc'

#Pre-requisitos
#Crear un "Key Pair"

Parameters:

  VPCCIDR:
     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
     ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
     Default: 10.2.0.0/16
     Description: Put CIDR Block for the VPC
     Type: String
     
  SubnetCIDR1:
     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
     ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
     Default: 10.2.1.0/24
     Description: Put CIDR Block for the Public Subnet
     Type: String
     
  SubnetCIDR2:
     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
     ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
     Default: 10.2.2.0/24	
     Description: Put CIDR Block for the Public Subnet
     Type: String
     
  SubnetCIDR3:
     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
     ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
     Default: 10.2.3.0/24
     Description: Put CIDR Block for the Private Subnet
     Type: String
     
  SubnetCIDR4:
     AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
     ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
     Default: 10.2.4.0/24
     Description: Put CIDR Block for the Private Subnet
     Type: String

  InstancesFamily: 
     Description: Select Instances Family to NAT Instances
     Type: CommaDelimitedList
     Default: "t3.micro"
    
  KeyPair: 
     Description: "Select KeyPair"
     Type: AWS::EC2::KeyPair::KeyName


Mappings: 

  RegionAndNATInstanceToAMIID: 
    us-east-1: 
      "NATInstancesID": "ami-0aa210fd2121a98b7"

  RegionAndInstanceToAMIID: 
    us-east-1: 
      "InstancesID": "ami-0263e4deb427da90e"

  RegionAndAvailabilityZoneToSubnet: 
    us-east-1: 
      "AZa": "us-east-1a"
      "AZb": "us-east-1b"


Resources:

# Creacion del recurso VPC

  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: 'true'
      EnableDnsSupport: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-vpc'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
        
# Creacion del recurso Internet Gateway

  VpcInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-ig'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
            
# Asociacion del recurso VPC e Internet Gateway
                  
  VpcInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref VpcInternetGateway
      VpcId: !Ref Vpc

# Creacion del recurso Subnet (Publicas y Privadas)

  VpcSubnetPublicAZa:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [RegionAndAvailabilityZoneToSubnet, !Ref "AWS::Region", AZa]
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetCIDR1
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-subnet-public-a'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'

  VpcSubnetPublicAZb:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [RegionAndAvailabilityZoneToSubnet, !Ref "AWS::Region", AZb]
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetCIDR2
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-subnet-public-b'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
        
  VpcSubnetPrivateAZa:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [RegionAndAvailabilityZoneToSubnet, !Ref "AWS::Region", AZa]
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetCIDR3
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-subnet-private-a'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
        
  VpcSubnetPrivateAZb:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !FindInMap [RegionAndAvailabilityZoneToSubnet, !Ref "AWS::Region", AZb]
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetCIDR4
      MapPublicIpOnLaunch: false
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-subnet-private-b'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
        
# Creacion del recurso Route Table

  VpcRouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-rt-public'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'

  VpcRouteTablePrivate:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-rt-private'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
              
# Asociacion del recurso VPC Internet Gateway y Public Route Table

  VpcInternetRoutePublicAttachment:
    Type: AWS::EC2::Route
    DependsOn: VpcInternetGatewayAttachment
    Properties:
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref VpcInternetGateway
        RouteTableId: !Ref VpcRouteTablePublic

# Asociacion del recurso EC2 NAT Instances y Private Route Table
        
  VpcNatRoutePrivateAttachment:
    Type: AWS::EC2::Route
    Properties:
        DestinationCidrBlock: 0.0.0.0/0
        InstanceId: !Ref Ec2NATInstance
        #NatGatewayId: !Ref VpcNATGateway
        RouteTableId: !Ref VpcRouteTablePrivate

# Creacion del recurso EC2 NAT Instances

  Ec2NATInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Select [0, !Ref InstancesFamily]
      ImageId:  !FindInMap [RegionAndNATInstanceToAMIID, !Ref "AWS::Region", NATInstancesID]
      IamInstanceProfile: !Ref IAMServerProfile
      KeyName: !Ref KeyPair
      UserData:
        'Fn::Base64': 
          !Sub |
            #!/bin/bash
            cd /tmp
            sudo yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
            sudo systemctl enable amazon-ssm-agent
            sudo systemctl start amazon-ssm-agent
      SecurityGroupIds:
      - !Ref EC2SecurityGroupInstances
      SourceDestCheck: false
      SubnetId: !Ref VpcSubnetPublicAZb
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-nat-instances'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'


# Creacion del recurso EC2 Tool

  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Select [0, !Ref InstancesFamily]
      ImageId:  !FindInMap [RegionAndInstanceToAMIID, !Ref "AWS::Region", InstancesID]
      IamInstanceProfile: !Ref IAMServerProfile
      KeyName: !Ref KeyPair
      SecurityGroupIds:
      - !Ref EC2SecurityGroupInstances
      SourceDestCheck: false
      SubnetId: !Ref VpcSubnetPrivateAZb
      Tags:
      - Key: Name
        Value: 'team-cf-demo-dev-tool'
      - Key: Enviroment
        Value: 'Development'
      - Key: Owner
        Value: 'owner@owner.com'
      - Key: Project
        Value: 'project'
        
        
# Security Group NAT Instances

  EC2SecurityGroupInstances:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: 'Allow Internal Connection' 
        VpcId: !Ref Vpc
        SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: 'team-cf-demo-dev-sg-natinstances'
          - Key: Enviroment
            Value: 'Development'
          - Key: Owner
            Value: 'owner@owner.com'
          - Key: Project
            Value: 'project'
        
# Asociacion del recurso Subnet y Route Table

  VpcSubnetPublicAZaRouteTableAttachment:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref VpcRouteTablePublic
        SubnetId: !Ref VpcSubnetPublicAZa
        
  VpcSubnetPublicAZbRouteTableAttachment:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref VpcRouteTablePublic
        SubnetId: !Ref VpcSubnetPublicAZb

  VpcSubnetPrivateAZaRouteTableAttachment:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref VpcRouteTablePrivate
        SubnetId: !Ref VpcSubnetPrivateAZa
        
  VpcSubnetPrivateAZbRouteTableAttachment:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
        RouteTableId: !Ref VpcRouteTablePrivate
        SubnetId: !Ref VpcSubnetPrivateAZb


#Creacion del recurso IAM Role

  IAMPolicySSM:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        ManagedPolicyName: team-cf-demo-dev-policy-ssm
        Path: /
        PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Action: 
                  - 'ssm:ResumeSession'
                  - 'ssm:UpdateInstanceInformation'
                  - 'ssm:DescribeSessions'
                  - 'ssm:TerminateSession'
                  - 'ssm:StartSession'
                  Resource: '*'
                - Effect: Allow
                  Action: 
                  - 'ssmmessages:CreateControlChannel'
                  - 'ssmmessages:CreateDataChannel'
                  - 'ssmmessages:OpenControlChannel'
                  - 'ssmmessages:OpenDataChannel'
                  Resource: '*'
                - Effect: Allow
                  Action: 
                  - 'cloudwatch:PutMetricData'
                  - 'cloudwatch:GetMetricStatistics'
                  - 'cloudwatch:ListMetrics'
                  - 'ec2:DescribeTags'
                  Resource: '*'


  IAMServerProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
        InstanceProfileName: team-cf-demo-dev-iprofile
        Path: /
        Roles:
            - !Ref IAMRoleEC2
                    
  IAMRoleEC2:
    Type: AWS::IAM::Role
    Properties:
        RoleName: team-cf-demo-dev-role-ssm
        Path: "/"  
        AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
                - Effect: Allow
                  Principal:
                    Service:
                    - ec2.amazonaws.com
                  Action:
                    - 'sts:AssumeRole'
        ManagedPolicyArns:
          - !Ref IAMPolicySSM
          - "arn:aws:iam::aws:policy/AdministratorAccess"
        Tags:
          - Key: Name
            Value: 'team-cf-demo-dev-instances'
          - Key: Enviroment
            Value: 'Development'
          - Key: Owner
            Value: 'owner@owner.com'
          - Key: Project
            Value: 'project'